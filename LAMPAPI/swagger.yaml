swagger: '2.0'
info:
  description: This is the API documentation for the COP 4331 Contacts App
  version: 1.0.0
  title: Contacts App
  contact:
    email: je127364@ucf.edu

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /Login.php:
    post:
      tags:
      - Users
      summary: Logs in to the contacts app
      operationId: dlLogin
      description: Logs in to the contacts app, returns empty info with an error string saying if it worked or not
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: loginUser
        description: Login
        schema:
          $ref: '#/definitions/Login'
      responses:
        "Empty Error String":
          description: OK
        "No Records Found":
          description: Login couldn't find the user in the Users table with their login and password
  /Register.php:
    post:
      tags:
      - Users
      summary: Registers user into the contacts app
      operationId: dlRegister
      description: Registers user into the contacts app, if successful it adds the user onto the database and writes their info onto a json with empty error string
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: registerUser
        description: Register
        schema:
          $ref: '#/definitions/Register'
      responses:
        "Empty Error String":
          description: OK
        "User Already Exists":
          description: There is already a login in the database with the same login as what was inputted.
        "Failed to add User":
          description: There is an error with the database and it failed to register the user
  /AddContact.php:
    post:
      tags:
      - Contacts
      summary: Adds contact
      operationId: addContact
      description: Adds a contact to the database, makes sure that there isn't an existing contact with the same first name, last name, and user id. Returns contact info with empty error string if successfull
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: addContact
        description: Adds Contact
        schema:
          $ref: '#/definitions/AddContact'
      responses:
        "Empty Error String":
          description: OK
        "Contact already exists":
          description: Found an existing contact with the same name and user id.
        "Failed to add contact":
          description: An error with the database occured and couldn't add the contact
  /SearchContacts.php:
    post:
      tags:
      - Contacts
      summary: Searches contacts
      operationId: searchContact
      description: Searches contacts from the contact app database, returns an array of contacts that match the search. This array will hold the contact's first name, last name, phone, email, userID, and ID.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: searchContact
        description: Contact Search
        schema:
          $ref: '#/definitions/SearchContact'
      responses:
        "Empty Error String":
          description: OK
        "No Records Found":
          description: Given the search, the database found no contacts that match it
  /DeleteContact.php:
    post:
      tags:
      - Contacts
      summary: Deletes contacts
      operationId: deleteContact
      description: Searches for a contact with the same name and id given. If successfull it returns an emtpy error string.
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: deleteContact
        description: Contact Delete
        schema:
          $ref: '#/definitions/DeleteContact'
      responses:
        "Empty Error String":
          description: OK
        "Contact Doesn't Exist":
          description: Given the search, the database found no contacts that match it
          
definitions:
  Login:
    type: object
    required:
    - Login
    - Password
    properties:
      Login:
        type: string
        example: "fred"
      Password:
        type: string
        example: "secret"
  Register:
    type: object
    required:
    - Login
    - Password
    - FirstName
    - LastName
    properties:
      Login:
        type: string
        example: userName111
      Password:
        type: string
        example: secretPass
      FirstName:
        type: string
        example: John
      LastName:
        type: string
        example: Doe
  SearchContact:
    type: object
    required:
    - UserId
    - search
    properties:
      UserId:
        type: integer
        example: 0
      search:
        type: string
        example: "John"
  AddContact:
    type: object
    required:
    - FirstName
    - LastName
    - Phone
    - Email
    - UserId
    properties:
      FirstName:
        type: string
        example: John
      LastName:
        type: string
        example: Doe
      Phone:
        type: integer
        example: 123456789
      Email:
        type: string
        example: email@email.com
      UserId:
        type: integer
        example: 0
  DeleteContact:
    type: object
    required:
    - FirstName
    - LastName
    - UserId
    properties:
      FirstName:
        type: string
        example: John
      LastName:
        type: string
        example: Doe
      UserId:
        type: integer
        example: 0
host: 165.227.103.4
basePath: /LAMPAPI
schemes:
- http